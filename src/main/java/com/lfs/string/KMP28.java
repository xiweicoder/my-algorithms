package com.lfs.string;

/*
    找出字符串中第一个匹配项的下标
    可以看本地的文件夹存的kmp
 */
public class KMP28 {

    /*

         aabaabaaf
         aabaaf
         与其相等前缀的后面 b
         找最长相等前后缀

         求前缀表:
         什么是前缀? 包含首字母,不包含尾字母的所有子串
         aabaaf的前缀:
                               前缀             后缀:                  最长相等前后缀
            a                 无                                         0
            aa                a                 a                        1
            aab               a,aa              b,ab                     0
            aaba              a,aa,aab          a,b,aba                  1
            aabaa             a,aa,aab,aaba     a,aa,baa,abaa            2
            aabaaf 不是前缀      无               无                        0

        索引:0 1 2 3 4 5 6 7 8
            a a b a a b a a f
            a a b a a f
            0 1 0 1 2 0             2这些数字(最长相等后缀): 表示下次移动,移动到索引2位置上...
                                    **这里有一个后缀aa,前面也有一个与其相等的前缀aa,在后缀的后面不匹配了,我们找与其相等前缀的后面开始匹配。** 这句话非常重要
                                    与其相等前缀的后面下标(索引)是多少呢? 就是aabaa最长相等前后缀的长度
                                    我们跳到索引为2的位置继续匹配,为什么?
                                    2正好是前后缀的长度,我们的目的是要跳到前缀的后面开始匹配,前缀的后面正好是前后缀的长度2(索引比长度小1)

            a a b a a b a a f
                  a a b a a f
                  0 1 0 1 2 0
        索引:0 1 2 3 4 5 6 7 8


         如何使用前缀表进行匹配:
     */

}
